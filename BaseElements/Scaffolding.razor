@using ElementsLib.Models

@if (ChildWebBlockModel is WebLineModel webLineModel)
{
    <div class="scaffolding @(BlockName)" >
        @if (webLineModel.BackgroundFilter != null)
        {
        
            <div class="scaffolding__background_filter" style="background-color: @(ChildWebBlockModel.BackgroundFilter)">
            </div>
        }
        @if (webLineModel.BackgroundVideo != null)
        {
            @AddVideo("https://static.powerc.store/photo_pc-12.mp4");
        }
        @if (webLineModel.BackgroundImage != null)
        {
            <div class="scaffolding__background_image">
                <img src=@(webLineModel.BackgroundImage) alt="background image" />
            </div>
        }
        @if (webLineModel.BackgroundColor != null)
        {
            <div class="scaffolding__background_color" style="background-color: @(ChildWebBlockModel.BackgroundColor)">
            </div>
        }
        
        <div class="@(webLineModel.ContentWidth != ColumnWidth.col_100 ? "t-container" : "")">
            
            
            <div class="@GetWidthClasses() " style="@GetFontStyles() @GetPaddingStyles()">
                @ChildContent
            </div>
        </div>
    </div>
}
else
{
    <div class="scaffolding @(BlockName) scaffolding__block" style="@GetFontStyles() @GetPaddingStyles()">
        @ChildContent
    </div>
}

@code {
    [Parameter] public string BlockName { get; set; } = "BlockName_01";
    
    [Parameter] public IWebBlockModel? ChildWebBlockModel { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    
    private string GetWidthClasses()
    {
        if (ChildWebBlockModel is WebLineModel webLineModel)
        {
            var width = webLineModel.ContentWidth ?? ColumnWidth.col_100;
            var leftMargin = webLineModel.LeftMargin ?? ColumnWidth.col_0;

            if (webLineModel.ContentWidth == ColumnWidth.col_100) 
                return $"{ColumnTransformer.WidthToClassName(width)} ";
        
            var availableLeftSpace = 12 - ColumnTransformer.ColumnWidthToInt(width);
            if (availableLeftSpace - leftMargin < 0)
                leftMargin = ColumnTransformer.IntToColumnWidth(availableLeftSpace);

            return $"t-col {ColumnTransformer.WidthToClassName(width)} {ColumnTransformer.LeftSpaceToClassName(leftMargin)} ";
        }
        
        return $"{ColumnTransformer.WidthToClassName(ColumnWidth.col_100)} ";
    }

    private string GetPaddingStyles()
    {
        return $"padding-top: {ChildWebBlockModel.MarginTop}; padding-bottom: {ChildWebBlockModel.MarginBottom}; ";
    }

    private string GetFontStyles()
    {
        var returnString = "";
        returnString += ChildWebBlockModel.FontColor != null ? $"color: {ChildWebBlockModel.FontColor}; " : "";
        returnString += ChildWebBlockModel.FontSize != null ? $"font-size: {ChildWebBlockModel.FontSize}; " : "";
        returnString += ChildWebBlockModel.FontFamily != null ? $"font-family: {ChildWebBlockModel.FontFamily}; " : "";
        returnString += ChildWebBlockModel.FontWeight != null ? $"font-weight: {ChildWebBlockModel.FontWeight}; " : "";
        returnString += ChildWebBlockModel.LineHeight != null ? $"line-height: {ChildWebBlockModel.LineHeight}; " : "";
        return returnString;
    }

    private RenderFragment AddVideo(string source) => builder =>
    {
        builder.AddMarkupContent(0, 
            $"<video autoplay muted loop " +
            $"style='position: absolute; " +
            $"z-index: -500; " +
            $"object-fit: cover;" +
            $"width:100%;" +
            $"height:100%;" +
            $"top: 50%;" +
            $"left: 50%;" +
            $"transform: translate(-50%, -50%);'> " +
            $"<source src='{source}' type='video/mp4'>" +
            $"</video>");
    };

}